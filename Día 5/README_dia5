
Día_5 : Reglas de Precedencia con Grafos
Elección del Problema
Este problema aborda la validación y ordenación de listas según un conjunto de reglas de precedencia. Las listas que no cumplen las reglas deben reordenarse para ajustarse a las restricciones, y el elemento central de las listas reordenadas se suma a un acumulador. Este enfoque tiene aplicaciones prácticas como:

Gestión de dependencias: Procesar tareas con restricciones de orden.
Sistemas de control: Verificar relaciones jerárquicas en procesos.
Procesamiento de reglas en grafos: Encontrar formas válidas de ordenar nodos en un grafo dirigido.
Técnicas y estructuras de datos empleadas

Grafos dirigidos: Modelan las reglas de precedencia, representados mediante unordered_map<int, vector<int>>.
Ordenación iterativa: Para reorganizar listas según las restricciones de precedencia.
Vectores: Almacenan las listas de entrada y las reglas de precedencia.
Pares clave-valor: Representan relaciones de dependencia entre elementos.
Enfoque de la solución

Lectura de datos: Se procesan reglas de precedencia y listas de actualizaciones desde un archivo.
Construcción del grafo: Representa las reglas de precedencia, donde un nodo apunta a sus dependencias.
Verificación de reglas: Cada lista de actualización se evalúa para comprobar si cumple las restricciones.
Ordenación de listas inválidas: Las listas que no cumplen las reglas se reordenan iterativamente hasta ajustarse al grafo.
Cálculo del resultado: Se selecciona el elemento central de las listas reordenadas y se acumula en un resultado final.
