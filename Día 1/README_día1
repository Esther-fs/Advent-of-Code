Elección del Problema
Se ha elegido este problema porque busca calcular la distancia total entre dos listas de números tras ordenarlas y emparejarlas en orden ascendente. Este tipo de problema es útil en situaciones del mundo real como en logística, emparejamiento de tareas o algoritmos de asignación, donde se busca minimizar las diferencias o distancias. La técnica de "Divide y Vencerás" se emplea para resolverlo de manera eficiente, dividiendo el trabajo en subproblemas más pequeños.

Técnica y Estructura de Datos Empleadas
Técnica: Divide y Vencerás

Dividir: Se divide el problema en dos mitades calculando el punto medio del intervalo.
Resolver: Se calcula la distancia para cada mitad recursivamente.
Combinar: Las distancias de las dos mitades se suman para obtener la distancia total.
Estructura de Datos: Vectores

Se usan vectores para almacenar las listas, permitiendo un fácil acceso y ordenación eficiente con std::sort.
Descripción de la Resolución del Problema
Entrada de Datos:
El usuario ingresa el número de elementos y los valores de las listas, que se almacenan en vectores left y right.

Ordenación de Listas:
Ambos vectores se ordenan en orden ascendente para minimizar las diferencias al emparejar los elementos.

Cálculo de la Distancia Total:
La función calculateDistance implementa la técnica de Divide y Vencerás. Si el rango tiene un solo elemento, se calcula la diferencia directamente; si es mayor, se divide en dos mitades y se resuelve recursivamente.

Salida del Resultado:
El programa imprime la distancia total, que es la suma de las diferencias absolutas entre los elementos correspondientes de las dos listas.

Comandos de ejecucion:
Compilar
  g++ -o Dia1 Dia1.cpp
Ejecutar
  ./Prog_D13
